rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Matches any document in the 'users' collection.
    // The {userId} wildcard captures the user's ID from the document path.
    match /users/{userId} {
      
      // A user can read or write their own user profile document.
      // This protects a user's settings, plan, and streak info.
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // --- Rules for the 'tasks' subcollection ---
      // Matches any task document under a specific user.
      match /tasks/{taskId} {

        // A user can read, update, or delete any of their own tasks.
        allow read, update, delete: if request.auth != null && request.auth.uid == userId;

        // --- Create Rule with Limits for 'free' users ---
        // A user can create a new task if:
        // 1. They are authenticated and are the owner of the subcollection.
        // 2. AND one of the following is true:
        //    a) Their plan is 'pro' (no limit).
        //    b) Their plan is 'free' AND they have fewer than 100 tasks.
        allow create: if request.auth != null && request.auth.uid == userId &&
                      (
                        get(/databases/$(database)/documents/users/$(userId)).data.plan == 'pro' ||
                        (
                          get(/databases/$(database)/documents/users/$(userId)).data.plan == 'free' &&
                          getAfter(/databases/$(database)/documents/users/$(userId)/tasks).size() < 100
                        )
                      );
      }
    }
  }
}
